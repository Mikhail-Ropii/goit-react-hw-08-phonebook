{"version":3,"file":"static/js/574.6c1adf49.chunk.js","mappings":"8NAEaA,EAASC,EAAAA,EAAAA,OAAH,yDAKNC,EAAQD,EAAAA,EAAAA,MAAH,mL,wJCJLE,GAAiBF,EAAAA,EAAAA,GAAOD,EAAAA,EAAPC,CAAe,CAC3CG,UAAW,SACXC,OAAQ,EACRC,gBAAiB,OACjBC,aAAc,EACdC,aAAc,EACdC,MAAO,QACPC,OAAQ,GACRC,MAAO,IACPC,QAAS,W,SCJLC,GAAYZ,EAAAA,EAAAA,GAAOa,EAAAA,GAAPb,CAAH,6FAMTc,GAAoBd,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,uCAGjBgB,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAKNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAEHE,SAAS,aACTC,QANa,sHAQZ,8DAEJN,MAAOG,EAAAA,KAEJH,MAAM,yBACNO,IAAI,KACJF,SAAS,qBACZJ,SAAUE,EAAAA,KAEPE,SAAS,wBACTG,IAAI,EAAG,mDAGG,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEb,cAAeA,EACfc,iBAAkBV,EAClBW,SATiB,SAAC,EAAD,GAA+C,IAA5Cd,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAca,EAAgB,EAAhBA,UACjDJ,EAASK,EAAAA,EAAAA,SAAoB,CAAEhB,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KAC5Ca,KAIA,UAKE,UAACpB,EAAD,YACE,UAAC,IAAD,CAAOsB,QAAQ,OAAf,kBAEE,SAACpB,EAAD,CAAmBG,KAAK,OAAOkB,UAAU,SACzC,SAAC,KAAD,CAAOC,KAAK,OAAOnB,KAAK,OAAOoB,GAAG,aAEpC,UAAC,IAAD,CAAOH,QAAQ,OAAf,mBAEE,SAACpB,EAAD,CAAmBG,KAAK,QAAQkB,UAAU,SAC1C,SAAC,KAAD,CAAOC,KAAK,QAAQnB,KAAK,QAAQoB,GAAG,cAEtC,UAAC,IAAD,CAAOH,QAAQ,SAAf,sBAEE,SAACpB,EAAD,CAAmBG,KAAK,WAAWkB,UAAU,SAC7C,SAAC,KAAD,CAAOC,KAAK,WAAWnB,KAAK,WAAWoB,GAAG,iBAE5C,SAACnC,EAAD,CAAgBoC,QAAQ,YAAYF,KAAK,SAAzC","sources":["components/contactForm/ContactForm.styled.js","components/styled/Register.styled.js","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: auto;\n  height: auto;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\n\nexport const RegisterButton = styled(Button)({\n  textAlign: 'center',\n  border: 0,\n  backgroundColor: 'blue',\n  marginBottom: 5,\n  borderRadius: 3,\n  color: 'white',\n  height: 38,\n  width: 200,\n  padding: '0 20px',\n});\n","import styled from '@emotion/styled';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport operations from 'redux/auth/Auth-operations';\nimport { Label } from '../components/contactForm/ContactForm.styled';\nimport { RegisterButton } from 'components/styled/Register.styled';\n\nconst FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ErrorMessageStyle = styled(ErrorMessage)`\n  color: red;\n`;\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst nameValid = /[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Type name')\n    .matches(\n      nameValid,\n      'Name may contain only letters, apostrophe, dash and spaces'\n    ),\n  email: yup\n    .string()\n    .email('Must be a valid email')\n    .max(255)\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(7, 'Your password has to be at least 7 characters'),\n});\n\nexport default function Register() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(operations.register({ name, email, password }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormStyle>\n        <Label htmlFor=\"name\">\n          Name\n          <ErrorMessageStyle name=\"name\" component=\"div\" />\n          <Field type=\"text\" name=\"name\" id=\"name\" />\n        </Label>\n        <Label htmlFor=\"name\">\n          Email\n          <ErrorMessageStyle name=\"email\" component=\"div\" />\n          <Field type=\"email\" name=\"email\" id=\"email\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          Password\n          <ErrorMessageStyle name=\"password\" component=\"div\" />\n          <Field type=\"password\" name=\"password\" id=\"password\" />\n        </Label>\n        <RegisterButton variant=\"contained\" type=\"submit\">\n          Create account\n        </RegisterButton>\n      </FormStyle>\n    </Formik>\n  );\n}\n"],"names":["Button","styled","Label","RegisterButton","textAlign","border","backgroundColor","marginBottom","borderRadius","color","height","width","padding","FormStyle","Form","ErrorMessageStyle","ErrorMessage","initialValues","name","email","password","schema","yup","shape","required","matches","max","min","Register","dispatch","useDispatch","validationSchema","onSubmit","resetForm","operations","htmlFor","component","type","id","variant"],"sourceRoot":""}