{"version":3,"file":"static/js/566.a741178f.chunk.js","mappings":"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","sources":["components/contactForm/ContactForm.styled.js","components/Phonebook.styled.js","components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","components/contactItem/ContactItem.jsx","components/contactList/ContactList.styled.js","components/contactList/ContactList.jsx","pages/Contacts.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: auto;\n  height: auto;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 50px;\n  background-color: #eeeeee;\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  padding: 10px;\n  margin-right: auto;\n  background-color: #999999;\n  border-radius: 3%;\n`;\n\nexport const Title = styled.h1``;\n\nexport const ContcTitle = styled.h2``;\n","import styled from '@emotion/styled';\nimport { Button, Label } from './ContactForm.styled';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useContacts } from 'components/redux/Contacts-slice';\n\nconst FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ErrorMessageStyle = styled(ErrorMessage)`\n  color: red;\n`;\n\nconst phoneValid =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nconst nameValid = /[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)/;\n\nexport const ContactForm = () => {\n  const { contacts, addNewContact } = useContacts();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase().trim() === values.name.toLowerCase().trim()\n      )\n    ) {\n      alert(`${values.name} is already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    addNewContact(newContact);\n\n    resetForm();\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup\n      .string()\n      .required('Type name')\n      .matches(\n        nameValid,\n        'Name may contain only letters, apostrophe, dash and spaces'\n      ),\n    number: yup\n      .string()\n      .required('Type number')\n      .matches(\n        phoneValid,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      ),\n  });\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormStyle>\n        <Label htmlFor=\"name\">\n          Name\n          <ErrorMessageStyle name=\"name\" component=\"div\" />\n          <Field type=\"text\" name=\"name\" id=\"name\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <ErrorMessageStyle name=\"number\" component=\"div\" />\n          <Field type=\"tel\" name=\"number\" id=\"number\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormStyle>\n    </Formik>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const Filter = ({ changeFilter }) => {\n  const [filterValue, setFilterValue] = useState('');\n\n  const onChangeFilter = evt => {\n    setFilterValue(evt.currentTarget.value);\n  };\n\n  useEffect(() => {\n    changeFilter(filterValue);\n  }, [changeFilter, filterValue]);\n\n  return (\n    <form>\n      <label>\n        Find contacts by name\n        <input type=\"text\" value={filterValue} onChange={onChangeFilter} />\n      </label>\n    </form>\n  );\n};\n","import propTypes from 'prop-types';\n\nexport const ContactItem = ({ name, number }) => {\n  return (\n    <>\n      {name}: {number}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: propTypes.string,\n  number: propTypes.string,\n};\n","import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\n\nexport const BookItem = styled.li`\n  list-style: circle;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const DeleteButton = styled(Button)({\n  border: 0,\n  marginBottom: 5,\n  borderRadius: 3,\n  color: 'white',\n  height: 28,\n  padding: '0 20px',\n});\n","import { ContactItem } from '../contactItem/ContactItem';\nimport { BookItem, DeleteButton } from './ContactList.styled';\nimport { useContacts } from '../redux/Contacts-slice';\nimport { useMemo } from 'react';\n\nexport const ContactList = ({ filterValue }) => {\n  const { contacts, deleteContact } = useContacts();\n\n  const findContact = useMemo(() => {\n    return (\n      contacts?.filter(contact =>\n        contact.name\n          .toLowerCase()\n          .trim()\n          .includes(filterValue.toLowerCase().trim())\n      ) ?? []\n    );\n  }, [contacts, filterValue]);\n\n  const handleDeleteContact = id => {\n    deleteContact(id);\n  };\n\n  return (\n    <ul>\n      {findContact.map(({ id, name, number }) => (\n        <BookItem key={id}>\n          <ContactItem name={name} number={number} />\n          <DeleteButton\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => handleDeleteContact(id)}\n          >\n            Delete\n          </DeleteButton>\n        </BookItem>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  Container,\n  Title,\n  ContcTitle,\n  Section,\n} from '../components/Phonebook.styled';\nimport { ContactForm } from '../components/contactForm/ContactForm';\nimport { Filter } from '../components/filter/Filter';\nimport { ContactList } from '../components/contactList/ContactList';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../components/redux/ContactsOperation';\n\nexport default function Contacts() {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function asyncContacts() {\n      dispatch(fetchContacts());\n    }\n    asyncContacts();\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section>\n        <Title>Phonebook</Title>\n        <ContactForm />\n        <ContcTitle>Contacts</ContcTitle>\n        <Filter changeFilter={setFilter} />\n        <ContactList filterValue={filter} />\n      </Section>\n    </Container>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Button","styled","Label","Container","Section","Title","ContcTitle","FormStyle","Form","ErrorMessageStyle","ErrorMessage","phoneValid","nameValid","ContactForm","useContacts","contacts","addNewContact","schema","yup","shape","name","required","matches","number","initialValues","validationSchema","onSubmit","values","resetForm","find","contact","toLowerCase","trim","alert","newContact","htmlFor","component","type","id","Filter","changeFilter","useState","filterValue","setFilterValue","useEffect","value","onChange","evt","currentTarget","ContactItem","propTypes","BookItem","DeleteButton","border","marginBottom","borderRadius","color","height","padding","ContactList","deleteContact","findContact","useMemo","filter","includes","map","variant","onClick","handleDeleteContact","Contacts","setFilter","dispatch","useDispatch","fetchContacts","asyncContacts","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes"],"sourceRoot":""}